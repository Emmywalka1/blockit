/ ==================================================
// Environment Configuration
// ==================================================

const config = {
  // Base network configuration
  BASE_CHAIN_ID: 8453,
  BASE_RPC_URL: 'https://mainnet.base.org',
  BASE_CHAIN_PARAMS: {
    chainId: '0x2105',
    chainName: 'Base',
    nativeCurrency: {
      name: 'Ethereum',
      symbol: 'ETH',
      decimals: 18,
    },
    rpcUrls: ['https://mainnet.base.org'],
    blockExplorerUrls: ['https://basescan.org'],
  },
  
  // API keys (set these in your environment)
  BASESCAN_API_KEY: process.env.REACT_APP_BASESCAN_API_KEY || 'CV4WNTY3QMPMABJVXJYVCK3ZZ419XT9Z9M',
  ALCHEMY_API_KEY: process.env.REACT_APP_ALCHEMY_API_KEY || '8z1xwjFnWSKEAenTEKZIn',
  ALCHEMY_URL: `https://base-mainnet.g.alchemy.com/v2/${process.env.REACT_APP_ALCHEMY_API_KEY || '8z1xwjFnWSKEAenTEKZIn'}`,
  
  // Contract addresses
  MULTICALL_ADDRESS: '0xcA11bde05977b3631167028862bE2a173976CA11',
  
  // App settings
  MAX_APPROVALS_TO_SCAN: 1000,
  BATCH_SIZE: 50,
  GAS_BUFFER_PERCENT: 20
};

// Export for use in React components
export {
  ProductionTokenScanner,
  ProductionApprovalRevoker,
  config
};

// ==================================================
// Usage Example in React Component
// ==================================================

/*
import { ProductionTokenScanner, ProductionApprovalRevoker, config } from './blockit-production';

// In your React component:
const scanner = new ProductionTokenScanner(provider, userAddress, config.BASESCAN_API_KEY);
const approvals = await scanner.scanAllTokenApprovals();

const revoker = new ProductionApprovalRevoker(signer);
const result = await revoker.revokeApproval(tokenAddress, spenderAddress);
*/
